body {
  background-color: #C8D0D2;
  margin: 0;
}

.container {
  max-width: 900px;
  margin: 1rem 2rem;
}

.card-grid {
  display: grid;
  align-items: center;
  /* automatically put as many cols in the row. At a min its 200px, at a max its just the whole row */
  grid-template-columns: repeat(auto-fill, minMax(200px, 1fr));
  gap: 1rem;
}

.card {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  border-radius: .25rem;
  box-shadow: 0 0 5px 2px rgba(0, 0, 0, .3);
  background-color: white;
  /* Makes sure if we flip front is on front and back is on back */
  transform-style: preserve-3d;
  height: 150px;
  transition: 150ms;
  /* So user knows they can click on this */
  cursor: pointer;
  /* Default val of --rotate-y is 0 */
  transform: perspective(1000px) rotateY(var(--rotate-y, 0)) 
  translateY(var(--translate-y, 0));
}

.card:hover {
  --translate-y: 2px;
  box-shadow: 0 0 5px 2px rgba(0, 0, 0, .5);
}

.card.flip {
  --rotate-y: 180deg;
}

.card .front {
  left: 0;
}

.card .front,
.card .back {
  position: absolute;
  padding: 1rem;
  /* Anything that is flipped 180deg will be hidden */
  backface-visibility: hidden;
}

.card .back {
  /*Puts the answer on the back */
  transform: rotateY(180deg);
}

.flashcard-options {
  margin-top: .5rem;
}

.flashcard-option {
  margin-top: .25rem;
  color: #555;
  font-size: .75rem;
}

.flashcard-option:first-child {
  margin-top: 0;
}